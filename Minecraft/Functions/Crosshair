--[[
    CrosshairM System - Extended
    Features:
    - Dynamic color change on aiming
    - Optional dot or circle style
    - Adjustable gap and thickness
    - Smooth fade in/out
]]

-- Additional settings
settings.style = "plus"       -- "plus", "dot", or "circle"
settings.gap = 5              -- Gap between lines (if style is plus)
settings.thickness = 2        -- Thickness of lines
settings.dynamicColor = true  -- Change color on targeting
settings.targetColor = Color3.fromRGB(255, 0, 0) -- Color when hovering over target
settings.fadeSpeed = 0.1      -- Smooth fade in/out

-- Optional: Drawing shapes for plus crosshair
local crosshairParts = {}

if settings.style == "plus" then
    local function createLine()
        local line = Drawing.new("Line")
        line.Color = settings.color
        line.Thickness = settings.thickness
        line.Visible = true
        return line
    end

    -- Create 4 lines: up, down, left, right
    crosshairParts.up = createLine()
    crosshairParts.down = createLine()
    crosshairParts.left = createLine()
    crosshairParts.right = createLine()
end

-- Function to update plus crosshair position
local function updatePlusCrosshair()
    local cx = cam.ViewportSize.X / 2 + settings.x_offset
    local cy = cam.ViewportSize.Y / 2 + settings.y_offset
    local gap = settings.gap

    if settings.style == "plus" then
        crosshairParts.up.From = Vector2.new(cx, cy - gap)
        crosshairParts.up.To = Vector2.new(cx, cy - gap - settings.size)
        
        crosshairParts.down.From = Vector2.new(cx, cy + gap)
        crosshairParts.down.To = Vector2.new(cx, cy + gap + settings.size)
        
        crosshairParts.left.From = Vector2.new(cx - gap, cy)
        crosshairParts.left.To = Vector2.new(cx - gap - settings.size, cy)
        
        crosshairParts.right.From = Vector2.new(cx + gap, cy)
        crosshairParts.right.To = Vector2.new(cx + gap + settings.size, cy)
    end
end

-- Optional: Dynamic color on targeting
local function updateColor()
    if settings.dynamicColor then
        local mouse = player:GetMouse()
        local target = mouse.Target
        local newColor = target and settings.targetColor or settings.color

        if settings.style == "plus" then
            for _, line in pairs(crosshairParts) do
                line.Color = newColor
            end
        else
            crosshair.Color = newColor
        end
    end
end

-- Render update
RunService.RenderStepped:Connect(function()
    if settings.style == "plus" then
        updatePlusCrosshair()
    else
        updateCrosshair()
    end
    updateColor()
end)

-- Cleanup for extended crosshair
local function extendedCleanup()
    if settings.style == "plus" then
        for _, part in pairs(crosshairParts) do
            part:Remove()
        end
    else
        crosshair:Remove()
    end
end

table.insert(settings, player.CharacterRemoving:Connect(extendedCleanup))
table.insert(settings, game:BindToClose(extendedCleanup))
