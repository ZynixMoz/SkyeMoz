local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer

-- SETTINGS
local CROUCH_HIP_OFFSET = -0.5 -- small crouch
local CROUCH_WALK_SPEED = 7
local WAIST_BEND_ANGLE = -5 -- subtle bend
local NECK_COMPENSATE_ANGLE = 5
local TWEEN_TIME = 0.25 -- smooth duration

local crouchToggle = false

-- FUNCTION TO CREATE GUI
local function createCrouchGUI(playerGui)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "CrouchUI"
    screenGui.ResetOnSpawn = false

    local crouchButton = Instance.new("ImageButton")
    crouchButton.Parent = screenGui
    crouchButton.Size = UDim2.new(0, 66, 0, 66)
    crouchButton.Position = UDim2.new(0.85, 0, 0.5, 0)
    crouchButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    crouchButton.BackgroundTransparency = 0.3
    crouchButton.BorderSizePixel = 0
    crouchButton.Image = "rbxassetid://18256199240"

    local circle = Instance.new("UICorner")
    circle.Parent = crouchButton
    circle.CornerRadius = UDim.new(0.5, 0)

    screenGui.Parent = playerGui
    return crouchButton
end

-- JOINTS
local waistMotor, neckMotor, origWaistC0, origNeckC0
local function setupJoints(character)
    for _, v in ipairs(character:GetDescendants()) do
        if v:IsA("Motor6D") then
            if v.Name == "Waist" then
                waistMotor = v
                origWaistC0 = v.C0
            elseif v.Name == "Neck" then
                neckMotor = v
                origNeckC0 = v.C0
            end
        end
    end
end

-- TWEEN FUNCTION
local function tweenCFrame(motor, targetC0)
    if motor then
        local tween = TweenService:Create(motor, TweenInfo.new(TWEEN_TIME, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {C0 = targetC0})
        tween:Play()
    end
end

-- CROUCH / UNCROUCH
local function crouch(humanoid)
    humanoid.HipHeight = humanoid.HipHeight + CROUCH_HIP_OFFSET
    humanoid.WalkSpeed = CROUCH_WALK_SPEED

    if waistMotor then
        tweenCFrame(waistMotor, origWaistC0 * CFrame.Angles(math.rad(WAIST_BEND_ANGLE), 0, 0))
    end
    if neckMotor then
        tweenCFrame(neckMotor, origNeckC0 * CFrame.Angles(math.rad(NECK_COMPENSATE_ANGLE), 0, 0))
    end
end

local function uncrouch(humanoid)
    humanoid.HipHeight = humanoid.HipHeight - CROUCH_HIP_OFFSET
    humanoid.WalkSpeed = 16

    tweenCFrame(waistMotor, origWaistC0)
    tweenCFrame(neckMotor, origNeckC0)
end

-- SETUP CHARACTER
local function onCharacterAdded(character)
    local humanoid = character:WaitForChild("Humanoid")
    setupJoints(character)

    local playerGui = player:WaitForChild("PlayerGui")
    local crouchButton = createCrouchGUI(playerGui)

    crouchButton.MouseButton1Click:Connect(function()
        crouchToggle = not crouchToggle
        if crouchToggle then
            crouchButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            crouch(humanoid)
        else
            crouchButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            uncrouch(humanoid)
        end
    end)

    if crouchToggle then
        crouch(humanoid)
    end
end

player.CharacterAdded:Connect(onCharacterAdded)
if player.Character then
    onCharacterAdded(player.Character)
end
